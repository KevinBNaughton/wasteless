<!DOCTYPE html>
<html>
  <head>
    <title> Wasteless </title>
  </head>

  <body>
    
    <div class="form-popup" id="rating_form">
        <div class="container">
            <form class="form-container">
            <h3>Send an email <br>to your local senator</h3>
            <select ng-model="newRating.name">
                <option value="Select Lot"  ng-value="listing.name" ng-repeat="listing in listings track by $index | orderBy: name">{{listing.name}}</option>
                
            </select>
            <label for="email"><b>Email:</b></label>
            <input type="text" placeholder="Enter email" ng-model="newRating.email" name="email" required>
            <br>


            <button type="submit" class="btn" ng-click="addRating()" onclick="window.location.reload()">Submit</button>
            <button type="submit" class="btn cancel" onclick="closeForm()">Close</button>
            </form>
        </div>
    </div>


    <div id='map'></div>
    <div id='map-overlay' class='map-overlay'></div>
    <%= javascript_tag "waste_data = #{@waste.to_json.html_safe};" %>

    <script>
    // Set bounds to State of Florida
    //31.040179, -87.767975 Northwest
    //24.318651, -79.061155 Southeast
    /*var bounds = [
        [-87.767975, 31.040179], // Northwest coordinates
        [-79.061155, 24.318651]  // Southeast coordinates
    ];*/
    mapboxgl.accessToken =  'pk.eyJ1IjoibHVrZXJwZmVpZmZlciIsImEiOiJjam14aTZzbnExN3JkM2tuMTR3cGJybnE1In0.uYrpAhiX9b6uSo5i4nMTLg';
    var map = new mapboxgl.Map({
        container: 'map', // container id
        style: 'mapbox://styles/mapbox/streets-v9', // stylesheet location
        center: [-81.4076, 28.2920], // starting position [lng, lat]
        zoom: 6.1, // starting zoom
        interactive: false
        //maxBounds: bounds // Sets bounds as max
    });

    var overlay = document.getElementById('map-overlay');


    var popup = new mapboxgl.Popup({
        closeButton: false
    });

    map.on('load', function() {
       
        var overlay = document.getElementById('map-overlay');


        var popup = new mapboxgl.Popup({
            closeButton: false
        });
        map.addSource('counties', {
            "type": "vector",
            "url": "mapbox://mapbox.82pkq93d"
        });

        map.addLayer({
            "id": "counties",
            "type": "fill",
            "source": "counties",
            "source-layer": "original",
            "paint": {
                "fill-outline-color": "rgba(0,0,0,0.1)",
                "fill-color": "rgba(0,0,0,0.1)"
            }
        }, 'place-city-sm'); 

        map.addLayer({
            "id": "counties-highlighted",
            "type": "fill",
            "source": "counties",
            "source-layer": "original",
            "paint": {
                "fill-outline-color": "#484896",
                "fill-color": "#6e599f",
                "fill-opacity": 0.75
            },
            "filter": ["in", "COUNTY", ""]
        }, 'place-city-sm');

        map.on('mousemove', 'counties', function(e) {
            // Change the cursor style as a UI indicator.
            map.getCanvas().style.cursor = 'pointer';

            // Single out the first found feature.
            var feature = e.features[0];

            // Query the counties layer visible in the map. Use the filter
            // param to only collect results that share the same county name.
            var relatedFeatures = map.querySourceFeatures('counties', {
                sourceLayer: 'original',
                filter: ['in', 'COUNTY', feature.properties.COUNTY]
            });

            // Render found features in an overlay.
            overlay.innerHTML = '';

            // Total the population of all features
            var populationSum = relatedFeatures.reduce(function(memo, feature) {
                return memo + feature.properties.population;
            }, 0);

            var title = document.createElement('strong');
            title.textContent = feature.properties.COUNTY + ' (' + relatedFeatures.length + ' found)';

            var population = document.createElement('div');
            population.textContent = 'Total population: ' + populationSum.toLocaleString();
            var waste = document.createElement('div');
            county = feature.properties.COUNTY;
            if (county.includes("County")) {
              county = county.replace(" County", "");
            }
            waste.textContent = "\nFood Waste: " + waste_data[county].toFixed(2) + " tons per capita";
            debugger

            overlay.appendChild(title);
            overlay.appendChild(population);
            overlay.appendChild(waste);
            overlay.style.display = 'block';

            // Add features that share the same county name to the highlighted layer.
            map.setFilter('counties-highlighted', ['in', 'COUNTY', feature.properties.COUNTY]);

            // Display a popup with the name of the county
            popup.setLngLat(e.lngLat)
                .setText(feature.properties.COUNTY)
                .addTo(map);
        });

        map.on('mouseleave', 'counties', function() {
            map.getCanvas().style.cursor = '';
            popup.remove();
            map.setFilter('counties-highlighted', ['in', 'COUNTY', '']);
            overlay.style.display = 'none';
        });
    });

    </script>

    <button class="open-button" onclick="openForm()">Send an Email</button>

    <script>
    var slider = document.getElementById("rating");
    var output = document.getElementById("capacity");
    output.innerHTML = slider.value;

    slider.oninput = function() {
      output.innerHTML = this.value;
    }

    function openForm() {
      document.getElementById("rating_form").style.display = "block";
    }

    function closeForm() {
      document.getElementById("rating_form").style.display = "none";
    }
    </script>

    </body>
</html>
